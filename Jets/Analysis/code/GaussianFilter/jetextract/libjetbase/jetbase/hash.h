// -*- mode: c++; -*-

#ifndef JETBASE_HASH_H_
#define JETBASE_HASH_H_

// LinkDef files generated by rootcint do not include config.h
#if defined(__CINT__) || defined(G__DICTIONARY)
#ifdef HAVE_CONFIG_H
#include "../config.h"
#endif // HAVE_CONFIG_H
#endif // defined(__CINT__) || defined(G__DICTIONARY)

#include <stdint.h>
#include <cstdlib>
#include <vector>

namespace jet {

	uint64_t hash_murmur2_64(const void *key, const size_t len,
							 const uint64_t seed = 0ULL);

	template<class _Key>
    struct hash {
	};

	template<>
	struct hash<uint64_t> {
		inline size_t operator()(const uint64_t &x) const
		{
			return jet::hash_murmur2_64(&x, 1U << 3);
		}
	};

	template<>
	struct hash<std::vector<uint64_t> > {
		inline size_t
		operator()(const std::vector<uint64_t> &x) const
		{
			return jet::hash_murmur2_64(&x[0], x.size() << 3);
		}
	};

}

#endif // JETBASE_HASH_H_
