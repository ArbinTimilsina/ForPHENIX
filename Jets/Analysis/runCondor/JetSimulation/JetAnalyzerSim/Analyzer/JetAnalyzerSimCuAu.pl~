#!/usr/local/bin/perl

use Time::HiRes qw (sleep);
use strict;

my $R = 0.2;
print "R-parameter is $R\n\n";
sleep(1);

my $minPt = 6.59;
print "Min pt is: $minPt (GeV/c)\n\n";
sleep(1);

my $nc = 3.0;
my $minCf = 0.2;
my $maxCf = 0.7;
print "For default: nc>=$nc, minCf=$minCf, maxCf=$maxCf\n\n";
sleep(1);

my $counter = 0.0;

my $analyzerDir = "/direct/phenix+hhj/arbint/JetSimulation/JetAnalyzerSim/Analyzer/CuAu";
my $containerDir = "/direct/phenix+hhj/arbint/JetSimulation/JetAnalyzerSim/Container/CuAu";

#name of the filelist
my $CNTname = "/direct/phenix+u/arbint/Jets/Analysis/runFiles/filelist.list";

#open the lists
open FILELIST, "<$CNTname" or die $!;

#loop over one of the lists
while(my $line=<FILELIST>)
{
    #get rid of the newline character
    chomp($line);

    #Get run number
        if($line =~ /.*-(\d+)-(\d+).*/){
	    my $anaDir = "JetAnalyzerSim-".$1."-".$2."";
	    my $conDir = "JetContainerAnalyzer-".$1."-".$2."";
	    print "\n************************************\n";
	    print "Making directory $anaDir\n\n";
	    system("cd $analyzerDir; rm -rf $anaDir; mkdir -p $anaDir");
sleep(2);

my $segments = 115;
print "\nRunning over $segments segments.\n\n";
sleep(1);

my $ii = 0;
for($ii=0;$ii<$segments;$ii++) {
#    if($counter>45410){next;}

    $counter++;
    print "Total count is: $counter\n\n";

    my $aDir = "JetAnalyzerSim_$ii";
    my $cDir = "JetContainerAnalyzer_$ii";
    print "\n************************************\n";
    print "Making directory $aDir\n\n";

    system("cd $analyzerDir/$anaDir; rm -rf $aDir; mkdir -p $aDir");

#Create JetAnalyzerSim.cmd script
    print "Creating JetAnalyzerSim.cmd\n";
    open (JETANALYZERSIM_CMD, ">$analyzerDir/$anaDir/$aDir/JetAnalyzerSim.cmd");
    print JETANALYZERSIM_CMD "#!/bin/csh\n";
    print JETANALYZERSIM_CMD "source /etc/csh.login\n";
    print JETANALYZERSIM_CMD "foreach i (/etc/profile.d/\*.csh)\n";
    print JETANALYZERSIM_CMD "     source \$i\n";
    print JETANALYZERSIM_CMD "end\n";
    print JETANALYZERSIM_CMD "source /opt/phenix/bin/phenix_setup.csh -n ana.475\n";
    print JETANALYZERSIM_CMD "source /opt/phenix/bin/odbcini_setup.csh\n";
    print JETANALYZERSIM_CMD "setenv LD_LIBRARY_PATH /direct/phenix\+u/arbint/Jets/Analysis/install/lib:\$\{LD_LIBRARY_PATH\}\n";
    print JETANALYZERSIM_CMD "if (\$\?\_CONDOR_SCRATCH_DIR\) then\n";
    print JETANALYZERSIM_CMD "set workDir = \$\{_CONDOR_SCRATCH_DIR\}\n";
    print JETANALYZERSIM_CMD "endif\n";
    print JETANALYZERSIM_CMD "cd \$workDir\n";
    print JETANALYZERSIM_CMD "pwd\n";

    print JETANALYZERSIM_CMD "ln -sf $containerDir/$conDir/$cDir/JetContainerAnalyzer.root .\n";
    print JETANALYZERSIM_CMD "ln -sf /direct/phenix+u/arbint/Jets/Analysis/code/JetSimulation/simMacros/runJetAnalyzerSim.C .\n";
    print JETANALYZERSIM_CMD "root -l -q -b \"runJetAnalyzerSim.C($R, $minPt, $nc, $minCf, $maxCf, 0.2)\"\n";
    close(JETANALYZERSIM_CMD);

#Submit the job
    system("cd $analyzerDir/$anaDir/$aDir; ln -sf /direct/phenix+u/arbint/Jets/Analysis/runCondor/JetSimulation/JetAnalyzerSim/Analyzer/JetAnalyzerSim.job");
    system("cd $analyzerDir/$anaDir/$aDir; chmod a+x JetAnalyzerSim.cmd");
    system("cd $analyzerDir/$anaDir/$aDir; condor_submit JetAnalyzerSim.job");

#Sleep for 0.2 seconds
    sleep(0.05);
   }
  }
}





